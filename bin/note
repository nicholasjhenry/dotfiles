#!/bin/bash

set -euo pipefail

# load env vars
if [ -f .env ]; then
  export $(cat .env | sed 's/#.*//g' | xargs)
fi

base_path=$HOME/.notes

function help() {
echo
echo "A note task runner for $base_path"
echo
}

function copy() {
    # find all files | trim the file name for display | fuzzy search and preview with bat
    local file=$(fd --type f . $base_path | cut -d'/' -f5- | fzf --preview "bat --style=numbers $base_path/{}")

    copy_file $file
}

function find() {
    # find all files | trim the file name for display | fuzzy search and preview with bat
    local file=$(fd --type f . $base_path | cut -d'/' -f5- | fzf --preview "bat --style=numbers $base_path/{}")

    display $file
}

function edit() {
    local file=$(fd --type f . $base_path | cut -d'/' -f5- | fzf --preview "bat --style=numbers $base_path/{}")

    $EDITOR "$base_path/$file"
}

function new() {
    local dir=$(dirname $1)
    echo "Enusre $dir exists..."
     mkdir -p "$base_path/$dir"
     $EDITOR "$base_path/$1"
}

function search() {
    rg $1 $base_path
}

function list() {
    fd --type f . $base_path
}

function copy_file {
    echo "$1"
    echo

    cat $base_path/$1 | pbcopy
}

function display {
    echo "$1"
    echo

    if [[ $1 =~ (^"snippets") ]]; then
        cat $base_path/$1 | pbcopy
        bat --style plain --theme GitHub $base_path/$1
    else
        glow $base_path/$1 -s $HOME/.glamour.json
    fi
}

function log() {
  new "log/$(date +%s)-$1"
}

function persist() {
  git add .
  git commit --allow-empty-message -m ""
  git push
}

case "$1" in
    copy)
        copy
        ;;
    find)
        find
        ;;
    list)
        list
        ;;
    edit)
        edit
        ;;
    search)
        search $2
        ;;
    new)
        new $2
        ;;
    log)
        log $2
        ;;
    persist)
      persist
      ;;
    *)
    if test -f "$base_path/$1"; then
        display $1
    else
        help task
        exit 1
    fi
esac
