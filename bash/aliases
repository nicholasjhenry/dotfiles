#*****************************************************************************
# Bundler
#*****************************************************************************

alias bi='bundle install --without production'
alias be='bundle exec'

#*****************************************************************************
# Cucumber
#*****************************************************************************

alias autocuke='rstakeout "bundle exec rake cucumber" "features/**/*"'
alias autocuke-wip='rstakeout "bundle exec rake cucumber:wip" "features/**/*"'

#*****************************************************************************
# Git
#*****************************************************************************

alias gst='git status'
alias gp='git smart-pull'
alias gl='git smart-log'
alias gm='git smart-merge'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gb='git branch'
alias gba='git branch -a'

alias git-remove='git ls-files --deleted | xargs git rm'

#*****************************************************************************
# Heroku
#*****************************************************************************

alias heroku-which-rev='heroku console "ENV[\\'COMMIT_HASH\\']"'

# Usage: heroku-s3-mirror --remote staging
function heroku-s3-mirror () {
  export `heroku config \$@ | grep S3_ | sed -e "s/ //g" -e "s/>//g" | tr "\\n" " "`
}

# http://devcenter.heroku.com/articles/pgbackups
#
alias heroku-db-capture='heroku pgbackups:capture'

# Usage: heroku-db-download --app your-app my_postgres_db
function heroku-db-download () {
  curl -o /tmp/heroku_db.dump `heroku pgbackups:url $1 $2` &&
  pg_restore --verbose --clean --no-acl --no-owner -U root -d $3 /tmp/heroku_db.dump
}

# Copy production database to staging
function heroku-db-p2s () {
  heroku pgbackups:restore DATABASE `heroku pgbackups:url --remote production` --remote staging
}

#*****************************************************************************
# SVN
#*****************************************************************************

alias sup='svn up' # trust me 3 chars makes a different
alias sst='svn st' # local file changes
alias sstu='svn st -u' # remote repository changes
alias scom='svn commit' # commit
alias svnclear='find . -name .svn -print0 | xargs -0 rm -rf' # removes all .svn folders from directory recursively
alias svnaddall='svn status | grep "^\?" | awk "{print \$2}" | xargs svn add' # adds all unadded files
alias svndeleteall='svn status | grep "^\!" | awk "{print \$2}" | xargs svn rm' # deletes all missing files

#*****************************************************************************
# Rails
#*****************************************************************************

function ss {
  if [ -e script/rails ]; then
    script/rails server $@
  else
    script/server $@
  fi
}
function sc {
  if [ -e script/rails ]; then
    script/rails console $@
  else
    script/console $@
  fi
}
function sg {
  if [ -e script/rails ]; then
    script/rails generate $@
  else
    script/generate $@
  fi
}

#*****************************************************************************
# Rails application size
# http://gilesbowkett.blogspot.com/2011/03/use-wc-l-for-quick-overviews-of-new.html
#*****************************************************************************

alias size-models='for MODEL in `ls app/models/`; do echo $MODEL; wc -l app/models/$MODEL; done'
alias size-controllers='for CONTROLLER in `ls app/controllers/`; do echo $CONTROLLER; wc -l app/controllers/$CONTROLLER; done'
alias size-views='for VIEW_DIR in `ls app/views/`; do for VIEW in `ls app/views/$VIEW_DIR`; do echo $VIEW_DIR $VIEW; wc -l app/views/$VIEW_DIR/$VIEW ; done; done'

#*****************************************************************************
# RSpec
#*****************************************************************************

alias specdoc='spec spec/ --format specdoc'

#*****************************************************************************
# RVM
#*****************************************************************************

alias rgu="rvm gemset use"
alias r='source .rvmrc'

#*****************************************************************************
# StaticMatic
#*****************************************************************************

alias sp="staticmatic preview ."
alias sb="staticmatic build ."

#*****************************************************************************
# Tar/Compress
#*****************************************************************************

alias ctar='tar -zcvf' # archive_name.tar.gz directory_to_compress
alias etar='tar -zxvf' # archive_name.tar.gz (-C /tmp/extract_here/)

#*****************************************************************************
# Terminitor
#*****************************************************************************

alias ts='terminitor start'

#*****************************************************************************
# Development
#*****************************************************************************

alias memcache-start='memcached -vv'

#*****************************************************************************
# Text Mate Shortcuts
#*****************************************************************************

alias edit-http='mate /etc/apache2'
alias edit-dot='mate ~/Source/dotfiles/'
alias edit-cheat='mate ~/Documents/My\ Documents/Firsthand/Assets/Cheat\ Sheets/'
alias edit-rails='mate app/ README config/ db/ lib/ public/robots.txt public/javascripts public/stylesheets test/ spec/ features/ README.textile GemFile vendor/extensions'

#*****************************************************************************
# Other
#*****************************************************************************

alias flushcache='dscacheutil -flushcache'
alias xs='xrefresh-server'
alias dus='du -skh' # as in disk usage summary
alias wtf='mate ~/Source/dotfiles/bash/aliases'
alias vim="/Applications/MacVim.app/Contents/MacOS/Vim"
alias myip="ifconfig | grep inet"
alias exip="curl whatismyip.org"
alias tmux="TERM=screen-256color-bce tmux"

#*****************************************************************************
# Shortcuts
#*****************************************************************************

alias cds='cd ~/Source/apps'
alias cdd="cd ~/Source/dotfiles/"

