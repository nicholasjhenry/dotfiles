# Remember when Rails associations get saved

When assign an object to an association, if that object being assign contains the foreign key, it will get saved automatically. Expect this behaviour for has_one and has_many.

    # has_one
    assert !account.new_record?
    assert my_address.new_record?

    account.address = my_address # => saved

    assert !my_address_.new_record?

    # has_many
    assert !customer.new_record?
    assert my_order.new_record?

    customer.orders << my_order # => saved

    assert !my_order.new_record?

If the parent object is not saved yet (i.e. new_record?), the children will be saved when the parent is saved. When an object is assigned in a belongs_to relationship it is not saved.

    # belongs_to
    assert !my_address.new_record?
    assert account.new_record?

    my_address.account = account # => not saved

    assert !my_address.new_record?
    assert account.new_record?
